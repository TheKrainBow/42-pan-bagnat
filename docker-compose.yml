services:
  frontend:
    container_name: pan-bagnat-frontend
    build:
      context: ./frontend
    expose:
      - '3000'
    networks:
      - pan-bagnat-core

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/ssl:ro
    ports:
      - '80:80'
      - '443:443'
    networks:
      - pan-bagnat-core
      - pan-bagnat-host
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - backend
      - frontend

  backend:
    container_name: pan-bagnat-backend
    user: "root:root"
    build:
      context: ./backend
    init: true
    expose:
      - "8080"
    environment:
      HOST_NAME: ${HOST_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_URL: ${POSTGRES_URL}
      FT_CALLBACK_URL: ${FT_CALLBACK_URL}
      FT_CLIENT_ID: ${FT_CLIENT_ID}
      FT_CLIENT_SECRET: ${FT_CLIENT_SECRET}
      REPO_BASE_PATH: ${REPO_BASE_PATH}
      REPO_HOST_BASE_PATH: ${REPO_HOST_BASE_PATH}
    depends_on:
      - db
    volumes:
      - ./repos:/data/repos
      - ./assets:/app/assets
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - pan-bagnat-net
      - pan-bagnat-core
  db:
    container_name: pan-bagnat-db
    image: postgres:16
    restart: on-failure
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - pan-bagnat-core
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-admin} -d ${POSTGRES_DB:-panbagnat} -h localhost"]
      interval: 5s
      timeout: 3s
      retries: 20

  migrator:
    image: migrate/migrate:latest
    command: ["-path", "/migrations", "-database", "${POSTGRES_URL}", "up"]
    volumes:
      - ./db/migrations:/migrations:ro
    networks:
      - pan-bagnat-core
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

volumes:
  postgres_data:

networks:
  pan-bagnat-core:
    name: pan-bagnat-core
    driver: bridge
    internal: true
  pan-bagnat-net:
    name: pan-bagnat-net
    driver: bridge
    external: true
  pan-bagnat-host:
    name: pan-bagnat-host
    driver: bridge
