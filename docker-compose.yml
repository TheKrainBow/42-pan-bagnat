services:
  frontend:
    container_name: pan-bagnat-frontend
    build:
      context: ./frontend
    expose:
      - '3000'
    env_file:
      - ./frontend/.env
    networks:
      - pan-bagnat-core

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/ssl:ro
    ports:
      - '80:80'
      - '443:443'
    networks:
      - pan-bagnat-core
      - pan-bagnat-host
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - backend
      - frontend

  backend:
    container_name: pan-bagnat-backend
    user: "root:root"
    build:
      context: ./backend
    ports:
      - "8080:8080"
    env_file:
      - ./backend/.env
    depends_on:
      - db
    volumes:
      - ./repos:/data/repos
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - pan-bagnat-net
      - pan-bagnat-core
  db:
    container_name: pan-bagnat-db
    image: postgres:16
    restart: on-failure
    expose:
      - "5432"
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d:Z
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./db/.env
    networks:
      - pan-bagnat-core

  adminer:
    container_name: pan-bagnat-adminer
    image: adminer
    ports: ["8081:8080"]
    networks:
      - pan-bagnat-core
      - pan-bagnat-host

volumes:
  postgres_data:

networks:
  pan-bagnat-core:
    name: pan-bagnat-core
    driver: bridge
    internal: true
  pan-bagnat-net:
    name: pan-bagnat-net
    driver: bridge
    external: true
  pan-bagnat-host:
    driver: bridge